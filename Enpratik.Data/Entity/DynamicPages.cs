//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Enpratik.Data
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;

    public partial class DynamicPages
    {
        public int Id { get; set; }
        [Display(Name = "Üst Sayfa")]
        public int ParentId { get; set; }
        [Display(Name = "Dil")]
        public int LanguageId { get; set; }
        [Display(Name = "Sayfa Adı")]
        [Required(ErrorMessage = "Sayfa Adı Giriniz!")]
        public string PageName { get; set; }
        public int UrlId { get; set; }
        [Display(Name = "Sayfa İçeriği")]
        public string PageContent { get; set; }
        [Display(Name = "Widget Olarak Ekle")]
        public Nullable<bool> RenderHtmlWidget { get; set; }
        [Display(Name = "Widget Alanı")]
        public Nullable<int> WidgetZoneId { get; set; }
        [Display(Name = "Widget Sırası")]
        public Nullable<int> WidgetPriority { get; set; }
        [Display(Name = "Widget Başlığı Göster")]
        public Nullable<bool> ShowWidgetTitle { get; set; }
        [Display(Name = "Widget Başlığı")]
        public string WidgetTitleTag { get; set; }
        [Display(Name = "Widgeti Çerçeveli Göster")]
        public Nullable<bool> WidgetRenderBordered { get; set; }
        [Display(Name = "Sitemap İçine Ekle")]
        public Nullable<bool> IncludeInSitemap { get; set; }
        [Display(Name = "Yayınla")]
        public Nullable<bool> IsPublished { get; set; }
        [Display(Name = "Seo Anahtar Kelimeler")]
        public string MetaKeywords { get; set; }
        [Display(Name = "Seo Açıklama")]
        public string MetaDescription { get; set; }
        [Display(Name = "Seo Site Başlığı")]
        public string MetaTitle { get; set; }
        [Display(Name = "Oluşturulma Tarihi")]
        public Nullable<System.DateTime> CreatedDate { get; set; }
        [Display(Name = "Oluşturan Kişi")]
        public Nullable<int> CreatedUserId { get; set; }
        [Display(Name = "Güncelleme Tarihi")]
        public Nullable<System.DateTime> UpdatedDate { get; set; }
        [Display(Name = "Güncelleyen Kişi")]
        public Nullable<int> UpdatedUserId { get; set; }
        public Nullable<System.DateTime> DeletedDate { get; set; }
        public Nullable<int> DeletedUserId { get; set; }
        [Display(Name = "Aktif mi")]
        public Nullable<bool> IsActive { get; set; }

        public static DynamicPages initialize = new DynamicPages();

        public string getParentName() {
            EnPratik_DataHelper db = new EnPratik_DataHelper();
            var parentName = db.DynamicPages.Where(p => p.Id == ParentId).Select(p => p.PageName).FirstOrDefault();
            return parentName;
        }

        public string getUrl() {
            EnPratik_DataHelper db = new EnPratik_DataHelper();
            var url = db.WebSiteUrls.Where(w => w.UrlTypeId == 5 & w.Id == UrlId).Select(w => w.Url).FirstOrDefault();
            return url;
        }

        public DynamicPages() {
            CreatedDate = DateTime.Now;
            IsActive = true;
        }

        public DynamicPagesDTO getDynamicPagesDTO(string parentName)
        {
            DynamicPagesDTO result = new DynamicPagesDTO();
            result.Id = Id;
            result.ParentName = parentName;
            result.LanguageId = LanguageId;
            result.PageName = PageName;
            result.UrlId = UrlId;
            result.PageContent = PageContent;
            result.RenderHtmlWidget = RenderHtmlWidget;
            result.WidgetZoneId = WidgetZoneId;
            result.WidgetPriority = WidgetPriority;
            result.ShowWidgetTitle = ShowWidgetTitle;
            result.WidgetTitleTag = WidgetTitleTag;
            result.WidgetRenderBordered = WidgetRenderBordered;
            result.IncludeInSitemap = IncludeInSitemap;
            result.IsPublished = IsPublished;
            result.MetaKeywords = MetaKeywords;
            result.MetaDescription = MetaDescription;
            result.MetaTitle = MetaTitle;
            result.CreatedDate = CreatedDate;
            result.CreatedUserId = CreatedUserId;
            result.UpdatedDate = UpdatedDate;
            result.UpdatedUserId = UpdatedUserId;
            result.DeletedDate = DeletedDate;
            result.DeletedUserId = DeletedUserId;
            result.IsActive = IsActive;
            return result;
        }
    }
    public partial class DynamicPagesDTO
    {
        public int Id { get; set; }
        [Display(Name = "Üst Sayfa")]
        public string ParentName { get; set; }
        [Display(Name = "Dil")]
        public int LanguageId { get; set; }
        [Display(Name = "Sayfa Adı")]
        [Required(ErrorMessage = "Sayfa Adı Giriniz!")]
        public string PageName { get; set; }
        public int UrlId { get; set; }
        [Display(Name = "Sayfa İçeriği")]
        public string PageContent { get; set; }
        [Display(Name = "Widget Olarak Ekle")]
        public Nullable<bool> RenderHtmlWidget { get; set; }
        [Display(Name = "Widget Alanı")]
        public Nullable<int> WidgetZoneId { get; set; }
        [Display(Name = "Widget Sırası")]
        public Nullable<int> WidgetPriority { get; set; }
        [Display(Name = "Widget Başlığı Göster")]
        public Nullable<bool> ShowWidgetTitle { get; set; }
        [Display(Name = "Widget Başlığı")]
        public string WidgetTitleTag { get; set; }
        [Display(Name = "Widgeti Çerçeveli Göster")]
        public Nullable<bool> WidgetRenderBordered { get; set; }
        [Display(Name = "Sitemap İçine Ekle")]
        public Nullable<bool> IncludeInSitemap { get; set; }
        [Display(Name = "Yayınla")]
        public Nullable<bool> IsPublished { get; set; }
        [Display(Name = "Seo Anahtar Kelimeler")]
        public string MetaKeywords { get; set; }
        [Display(Name = "Seo Açıklama")]
        public string MetaDescription { get; set; }
        [Display(Name = "Seo Site Başlığı")]
        public string MetaTitle { get; set; }
        [Display(Name = "Oluşturulma Tarihi")]
        public Nullable<System.DateTime> CreatedDate { get; set; }
        [Display(Name = "Oluşturan Kişi")]
        public Nullable<int> CreatedUserId { get; set; }
        [Display(Name = "Güncelleme Tarihi")]
        public Nullable<System.DateTime> UpdatedDate { get; set; }
        [Display(Name = "Güncelleyen Kişi")]
        public Nullable<int> UpdatedUserId { get; set; }
        public Nullable<System.DateTime> DeletedDate { get; set; }
        public Nullable<int> DeletedUserId { get; set; }
        [Display(Name = "Aktif mi")]
        public Nullable<bool> IsActive { get; set; }
        
    }
}
