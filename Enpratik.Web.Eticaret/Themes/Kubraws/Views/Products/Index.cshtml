@model List<Enpratik.Data.Products>
@using Enpratik.Core;
@{
    ViewBag.Title = "Index";

    Enpratik.Data.EnPratik_DataHelper db = new Enpratik.Data.EnPratik_DataHelper();

    var categories = db.Categories.Where(c => c.IsActive == true).OrderBy(c => c.DisplayOrder).ToList();


    var widgets = (from wz in db.WidgetZonesMapping
                   join w in db.Widgets on wz.WidgetId equals w.Id
                   join cx in db.WidgetZonesParamMapping on wz.Id equals cx.WidgetZoneMappingId into gj
                   from ca in gj.DefaultIfEmpty()
                   where wz.WidgetZoneId == 2 && w.IsActive == true && wz.IsActive == true
                   orderby wz.OrderIndex
                   select new Enpratik.Data.WidgetsDTO
                   {
                       Id = w.Id,
                       WidgetZonesMappingId = wz.Id,
                       WidgetZoneId = wz.WidgetZoneId,
                       WidgetName = w.WidgetName,
                       WidgetControlPath = w.WidgetControlPath,
                       IsControlWidget = w.IsControlWidget,
                       WidgetZonesParamMapping = ca
                   }).ToList();



}



<div class="hero-wrap hero-bread" style="background-image: url('images/bg_1.jpg');">
    <div class="container">
        <div class="row no-gutters slider-text align-items-center justify-content-center">
            <div class="col-md-9 ftco-animate text-center">
                <p class="breadcrumbs"><span class="mr-2"><a href="/">Anasayfa</a></span> <span>Ürünler</span></p>
                <h1 class="mb-0 bread">Ürünler</h1>
            </div>
        </div>
    </div>
</div>

<section class="ftco-section">
    <div class="container">
       
        <div class="row">

            @foreach (var item in Model)
            {

                var images = db.Product_Picture_Mapping.Where(p => p.ProductId == item.Id & p.IsProductImage == true).FirstOrDefault();

                var productUrl = "product/" + item.getUrl() + "-" + item.Id;
                

                <div class="col-md-6 col-lg-3 ftco-animate">
                    <div class="product">
                        <a href="/@productUrl" class="img-prod">
                            <img class="img-fluid" src="@Functions.GetProductImages(images)" alt="@item.ProductName">
                            <span class="status">30%</span>
                            <div class="overlay"></div>
                        </a>
                        <div class="text py-3 pb-4 px-3 text-center">
                            <h3><a href="/@productUrl">@item.ProductName</a></h3>
                            <div class="d-flex">
                                <div class="pricing">
                                    <p class="price">@*<span class="mr-2 price-dc">$120.00</span>*@<span class="price-sale">@Functions.MoneyFormat(2, item.Price) ₺</span></p>
                                </div>
                            </div>
                            <div class="bottom-area d-flex px-3">
                                <div class="m-auto d-flex">                                   
                                </div>
                            </div>
                        </div>
                    </div>
                </div>   
            }
        </div>
    </div>
</section>






<script type="text/javascript">









    function orderby_onchange(that) {

        var productListUrl = "@(Request.Url.AbsolutePath+(Request.Url.AbsolutePath.EndsWith("/") ? "" : "/"))"

        window.location.href = productListUrl+"?orderby=" + $(that).val();
    }
    window.onload = function () {

        var $topeContainer = $('.isotope-grid');
        var $filter = $('.filter-tope-group');
        $filter.each(function () {
            $filter.on('click', 'button', function () {
                var filterValue = $(this).attr('data-filter');
                console.log("tiklandı");
                $topeContainer.isotope({
                    filter: filterValue
                });
            });
        });


        var $grid = $topeContainer.each(function () {
            $(this).isotope({
                itemSelector: '.isotope-item',
                layoutMode: 'fitRows',
                percentPosition: true,
                animationEngine: 'best-available',
                masonry: {
                    columnWidth: '.isotope-item'
                }
            });
        });




        var param = getUrlParameter("orderby");

        if (param == undefined)
            param="date";
        if (param == "")
            param="date";

        $(".orderby").val(param);
    }
    function getUrlParameter(sParam) {
        var sPageURL = window.location.search.substring(1),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
            }
        }
    };

</script>