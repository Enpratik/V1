@model List<Enpratik.Data.Products>
@using Enpratik.Core;
@{
    ViewBag.Title = "Index";

    Enpratik.Data.EnPratik_DataHelper db = new Enpratik.Data.EnPratik_DataHelper();

    var categories = db.Categories.Where(c => c.IsActive == true).OrderBy(c => c.DisplayOrder).ToList();


    //var widgets = (from wz in db.WidgetZonesMapping
    //               join w in db.Widgets on wz.WidgetId equals w.Id
    //               join cx in db.WidgetZonesParamMapping on wz.Id equals cx.WidgetZoneMappingId into gj
    //               from ca in gj.DefaultIfEmpty()
    //               where wz.WidgetZoneId == 2 && w.IsActive == true && wz.IsActive == true
    //               orderby wz.OrderIndex
    //               select new Enpratik.Data.WidgetsDTO
    //               {
    //                   Id = w.Id,
    //                   WidgetZonesMappingId = wz.Id,
    //                   WidgetZoneId = wz.WidgetZoneId,
    //                   WidgetName = w.WidgetName,
    //                   WidgetControlPath = w.WidgetControlPath,
    //                   IsControlWidget = w.IsControlWidget,
    //                   WidgetZonesParamMapping = ca
    //               }).ToList();



}




<div class="colorlib-blog">
    <div class="container">
        <div class="row">

            @foreach (var item in Model)
            {
                var images = db.Product_Picture_Mapping.Where(p => p.ProductId == item.Id & p.IsProductImage == true).FirstOrDefault();

                var productUrl = "product/" + item.getUrl() + "-" + item.Id;

                var catId = db.Product_Category_Mapping.Where(c => c.ProductId == item.Id).Select(c => c.CategoryId).FirstOrDefault();

                var catCssName = "";

                if (categories.Count > 0)
                {
                    var category = categories.Where(c => c.Id == catId).FirstOrDefault();
                    if (category != null)
                    {
                        catCssName = Functions.GetUrl(category.CategoryName);
                    }
                }

                <div class="col-md-4 animate-box">
                    <article class="article-entry">
                        <a href="/@productUrl" class="blog-img" style="background-image: url(@Functions.GetProductImages(images));">
                        </a>
                        <div class="desc">
                            <h2><a href="/@productUrl">@item.ProductName</a></h2>
                            <p>@Functions.MoneyFormat(2, item.Price) ₺</p>
                        </div>
                    </article>
                </div>


            }




        </div>
    </div>
</div>










<script type="text/javascript">


  


   



    function orderby_onchange(that) {

        var productListUrl = "@(Request.Url.AbsolutePath+(Request.Url.AbsolutePath.EndsWith("/") ? "" : "/"))"

        window.location.href = productListUrl+"?orderby=" + $(that).val();
    }
    window.onload = function () {

        var $topeContainer = $('.isotope-grid');
        var $filter = $('.filter-tope-group');
        $filter.each(function () {
            $filter.on('click', 'button', function () {
                var filterValue = $(this).attr('data-filter');
                console.log("tiklandı");
                $topeContainer.isotope({
                    filter: filterValue
                });
            });
        });


        var $grid = $topeContainer.each(function () {
            $(this).isotope({
                itemSelector: '.isotope-item',
                layoutMode: 'fitRows',
                percentPosition: true,
                animationEngine: 'best-available',
                masonry: {
                    columnWidth: '.isotope-item'
                }
            });
        });




        var param = getUrlParameter("orderby");

        if (param == undefined)
            param="date";
        if (param == "")
            param="date";

        $(".orderby").val(param);
    }
    function getUrlParameter(sParam) {
        var sPageURL = window.location.search.substring(1),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
            }
        }
    };
    
</script>